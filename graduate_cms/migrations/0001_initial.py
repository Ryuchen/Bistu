# Generated by Django 2.1.7 on 2019-03-18 03:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Academy',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识ID', primary_key=True, serialize=False, unique=True)),
                ('aca_name', models.CharField(help_text='学院名称', max_length=128, null=True)),
                ('aca_code', models.IntegerField(help_text='学院代码', null=True)),
            ],
            options={
                'verbose_name': '学院',
                'verbose_name_plural': '学院',
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识ID', primary_key=True, serialize=False, unique=True)),
                ('cla_name', models.CharField(help_text='班级名称', max_length=128)),
                ('cla_code', models.IntegerField(help_text='班级代码', null=True)),
            ],
            options={
                'verbose_name': '班级',
                'verbose_name_plural': '班级',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识ID', primary_key=True, serialize=False, unique=True)),
                ('edu_begin_time', models.DateField(help_text='开始时间')),
                ('edu_finish_time', models.DateField(help_text='结束时间')),
                ('edu_school_name', models.CharField(help_text='学校名称', max_length=128, null=True)),
                ('edu_study_major', models.CharField(help_text='专业方向', max_length=128, null=True)),
            ],
            options={
                'verbose_name': '学历',
                'verbose_name_plural': '学历',
            },
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识ID', primary_key=True, serialize=False, unique=True)),
                ('maj_name', models.CharField(help_text='学科专业名称', max_length=128, null=True)),
                ('maj_code', models.IntegerField(help_text='学科专业编号', null=True)),
            ],
            options={
                'verbose_name': '学科专业',
                'verbose_name_plural': '学科专业',
            },
        ),
        migrations.CreateModel(
            name='Research',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识ID', primary_key=True, serialize=False, unique=True)),
                ('res_name', models.CharField(help_text='研究方向', max_length=128, null=True)),
            ],
            options={
                'verbose_name': '研究方向',
                'verbose_name_plural': '研究方向',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stu_number', models.IntegerField(help_text='学号', unique=True)),
                ('stu_gender', models.CharField(choices=[('G1', '男'), ('G2', '女')], help_text='性别', max_length=64)),
                ('stu_cardID', models.CharField(help_text='身份证号', max_length=128, null=True, unique=True)),
                ('stu_birth_day', models.DateField(help_text='出生日期')),
                ('stu_source', models.CharField(help_text='生源地', max_length=128)),
                ('stu_political', models.CharField(choices=[('P1', '党员'), ('P2', '团员'), ('P3', '群众'), ('P4', '民主党派')], help_text='政治面貌', max_length=64)),
                ('stu_telephone', models.IntegerField(help_text='电话号码', null=True)),
                ('stu_status', models.CharField(choices=[('S1', '在校'), ('S2', '离校'), ('S3', '留校')], help_text='在校状态', max_length=64)),
                ('stu_is_superb', models.BooleanField(default=False, help_text='是否优秀毕业生')),
                ('education', models.OneToOneField(help_text='学历', null=True, on_delete=django.db.models.deletion.SET_NULL, to='graduate_cms.Education')),
                ('major', models.OneToOneField(help_text='学科专业', null=True, on_delete=django.db.models.deletion.SET_NULL, to='graduate_cms.Major')),
                ('stu_class', models.OneToOneField(help_text='所属班级', null=True, on_delete=django.db.models.deletion.SET_NULL, to='graduate_cms.Class')),
            ],
            options={
                'verbose_name': '学生',
                'verbose_name_plural': '学生',
            },
        ),
        migrations.CreateModel(
            name='Thesis',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识ID', primary_key=True, serialize=False, unique=True)),
                ('the_title', models.CharField(help_text='课题名称', max_length=128)),
                ('the_start_time', models.DateField(help_text='开题时间')),
                ('the_mid_score', models.CharField(help_text='中期考核结果', max_length=64)),
                ('the_start_score', models.CharField(help_text='开题结果', max_length=64)),
                ('the_check_score', models.CharField(help_text='查重结果', max_length=64)),
                ('the_blind_score1', models.CharField(help_text='盲审结果1', max_length=64)),
                ('the_blind_score2', models.CharField(help_text='盲审结果2', max_length=64)),
                ('the_final_score', models.CharField(help_text='答辩成绩', max_length=64)),
                ('the_is_superb', models.BooleanField(default=False, help_text='是否优秀论文')),
            ],
            options={
                'verbose_name': '论文',
                'verbose_name_plural': '论文',
            },
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tut_number', models.IntegerField(help_text='导师工号', unique=True)),
                ('tut_gender', models.CharField(choices=[('G1', '男'), ('G2', '女')], help_text='性别', max_length=64)),
                ('tut_title', models.CharField(choices=[('T1', '讲师'), ('T2', '副教授'), ('T3', '教授'), ('T4', '副研究员'), ('T5', '研究员'), ('T6', '助教')], help_text='职称', max_length=64)),
                ('tut_cardID', models.CharField(help_text='身份证号', max_length=128, null=True, unique=True)),
                ('tut_birth_day', models.DateField(help_text='出生日期')),
                ('tut_entry_day', models.DateField(help_text='入职日期')),
                ('tut_political', models.CharField(choices=[('P1', '党员'), ('P2', '团员'), ('P3', '群众'), ('P4', '民主党派')], help_text='政治面貌', max_length=64)),
                ('tut_telephone', models.IntegerField(help_text='电话号码', null=True)),
                ('tut_degree', models.CharField(choices=[('D1', '博士'), ('D2', '硕士'), ('D3', '本科')], help_text='学位', max_length=64)),
                ('academy', models.OneToOneField(help_text='所属学院', null=True, on_delete=django.db.models.deletion.SET_NULL, to='graduate_cms.Academy')),
                ('education', models.OneToOneField(help_text='学历', null=True, on_delete=django.db.models.deletion.SET_NULL, to='graduate_cms.Education')),
                ('major', models.ManyToManyField(to='graduate_cms.Major')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '导师',
                'verbose_name_plural': '导师',
            },
        ),
        migrations.AddField(
            model_name='student',
            name='thesis',
            field=models.OneToOneField(help_text='毕业论文', null=True, on_delete=django.db.models.deletion.SET_NULL, to='graduate_cms.Thesis'),
        ),
        migrations.AddField(
            model_name='student',
            name='tutor',
            field=models.OneToOneField(help_text='指导老师', null=True, on_delete=django.db.models.deletion.SET_NULL, to='graduate_cms.Tutor'),
        ),
        migrations.AddField(
            model_name='student',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='major',
            name='research',
            field=models.ManyToManyField(help_text='科研方向', to='graduate_cms.Research'),
        ),
        migrations.AddField(
            model_name='academy',
            name='major',
            field=models.ManyToManyField(to='graduate_cms.Major'),
        ),
    ]
