# Generated by Django 2.1.7 on 2019-05-09 06:28

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('学院管理', '0001_initial'),
        ('用户管理', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Thesis',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识ID', primary_key=True, serialize=False, unique=True)),
                ('the_title', models.CharField(help_text='课题名称', max_length=128)),
                ('the_start_time', models.DateField(help_text='开题时间')),
                ('the_start_result', models.BooleanField(default=True, help_text='开题结果')),
                ('the_is_delay', models.BooleanField(default=False, help_text='是否延期')),
                ('the_delay_reason', models.TextField(help_text='延期原因', null=True)),
                ('the_is_superb', models.BooleanField(default=False, help_text='是否优秀论文')),
                ('the_final_score', models.BooleanField(default=False, help_text='答辩成绩')),
                ('student', models.ForeignKey(help_text='课题学生', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student', to='用户管理.Student')),
            ],
            options={
                'verbose_name': '毕业论文',
                'verbose_name_plural': '毕业论文',
                'db_table': 'thesis',
                'permissions': [('can_insert_thesis', '新增毕业论文'), ('can_delete_thesis', '删除毕业论文'), ('can_update_thesis', '修改毕业论文'), ('can_search_thesis', '查询毕业论文')],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ThesisBlindReview',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识ID', primary_key=True, serialize=False, unique=True)),
                ('bli_date', models.DateField(help_text='盲审时间')),
                ('bli_score', models.CharField(help_text='盲审结果', max_length=64)),
                ('thesis', models.ForeignKey(help_text='论文课题', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bli_thesis', to='培养管理.Thesis')),
            ],
            options={
                'verbose_name': '论文盲审',
                'verbose_name_plural': '论文盲审',
                'db_table': 'thesis_blind_review',
                'permissions': [('can_insert_thesis_blind_review', '新增盲审结果'), ('can_delete_thesis_blind_review', '删除盲审结果'), ('can_update_thesis_blind_review', '修改盲审结果'), ('can_search_thesis_blind_review', '查询盲审结果')],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ThesisOpenReport',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识ID', primary_key=True, serialize=False, unique=True)),
                ('time', models.DateField(default='2019', help_text='年份')),
                ('stu_count', models.IntegerField(default=0, help_text='学生数量')),
                ('schedule_count', models.IntegerField(default=0, help_text='按期开题人数')),
                ('delay_count', models.IntegerField(default=0, help_text='延期开题人数')),
                ('fail_count', models.IntegerField(default=0, help_text='开题不通过人数')),
                ('academy', models.ForeignKey(help_text='学院名称', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='otr_academy', to='学院管理.Academy')),
            ],
            options={
                'verbose_name': '开题报告统计',
                'verbose_name_plural': '开题报告统计',
                'db_table': 'thesis_open_report',
                'permissions': [('can_insert_thesis_open_report', '新增开题统计'), ('can_delete_thesis_open_report', '删除开题统计'), ('can_update_thesis_open_report', '修改开题统计'), ('can_search_thesis_open_report', '查询开题统计')],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ThesisPlaCheck',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识ID', primary_key=True, serialize=False, unique=True)),
                ('pla_date', models.DateField(help_text='查重时间')),
                ('pla_result', models.CharField(help_text='查重结果', max_length=128)),
                ('pla_rate', models.CharField(help_text='重复率', max_length=128)),
                ('thesis', models.ForeignKey(help_text='论文课题', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pla_thesis', to='培养管理.Thesis')),
            ],
            options={
                'verbose_name': '论文查重',
                'verbose_name_plural': '论文查重',
                'db_table': 'thesis_pla_check',
                'permissions': [('can_insert_thesis_pla_check', '新增查重结果'), ('can_delete_thesis_pla_check', '删除查重结果'), ('can_update_thesis_pla_check', '修改查重结果'), ('can_search_thesis_pla_check', '查询查重结果')],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ThesisQualityReport',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识ID', primary_key=True, serialize=False, unique=True)),
                ('time', models.DateField(default='2019', help_text='年份')),
                ('full_time_count', models.IntegerField(default=0, help_text='全日制学生数量')),
                ('delay_count', models.IntegerField(default=0, help_text='延期人数')),
                ('delay_reason', models.TextField(default='', help_text='延期原因')),
                ('paper_stu_count', models.IntegerField(default=0, help_text='论文检测人数')),
                ('paper_pass_count', models.IntegerField(default=0, help_text='论文检测结果一次通过人数')),
                ('paper_pass_proportion', models.IntegerField(default=0, help_text='论文检测结果一次通过率')),
                ('paper_fail_count', models.IntegerField(default=0, help_text='论文检测结果不合格人数')),
                ('paper_fail_proportion', models.IntegerField(default=0, help_text='论文检测结果不合格占比')),
                ('paper_fifteen_count', models.IntegerField(default=0, help_text='论文检测结果15%以下人数')),
                ('paper_fifteen_proportion', models.IntegerField(default=0, help_text='论文检测结果15%以下占比')),
                ('paper_ten_count', models.IntegerField(default=0, help_text='论文检测结果10%以下人数')),
                ('paper_ten_proportion', models.IntegerField(default=0, help_text='论文检测结果10%以下占比')),
                ('blind_trial_proportion', models.IntegerField(default=0, help_text='盲审比例')),
                ('blind_trial_count', models.IntegerField(default=0, help_text='盲审未通过人数')),
                ('reply_count', models.IntegerField(default=0, help_text='答辩未通过人数')),
                ('evaluation_count', models.IntegerField(default=0, help_text='评优名额')),
                ('evaluation_result', models.IntegerField(default=0, help_text='评优评选结果')),
                ('graduate_count', models.IntegerField(default=0, help_text='毕业人数')),
                ('graduate_proportion', models.IntegerField(default=0, help_text='毕业率')),
                ('degree_count', models.IntegerField(default=0, help_text='获学位人数')),
                ('degree_proportion', models.IntegerField(default=0, help_text='获学位率')),
                ('academy', models.ForeignKey(help_text='学院名称', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tq_academy', to='学院管理.Academy')),
                ('major', models.ForeignKey(help_text='学科专业', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='major', to='学院管理.Major')),
            ],
            options={
                'verbose_name': '论文质量统计',
                'verbose_name_plural': '论文质量统计',
                'db_table': 'thesis_quality_report',
                'permissions': [('can_insert_thesis_quality_report', '新增论文质量统计'), ('can_delete_thesis_quality_report', '删除论文质量统计'), ('can_update_thesis_quality_report', '修改论文质量统计'), ('can_search_thesis_quality_report', '查询论文质量统计')],
                'default_permissions': (),
            },
        ),
    ]
