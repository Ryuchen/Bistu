# Generated by Django 2.1.7 on 2019-05-02 07:51

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('学院管理', '0002_auto_20190502_0751'),
        ('培养管理', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlindReview',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识ID', primary_key=True, serialize=False, unique=True)),
                ('bli_score', models.CharField(help_text='盲审结果', max_length=64)),
            ],
            options={
                'verbose_name': '论文盲审',
                'verbose_name_plural': '论文盲审',
                'db_table': 'blindReview',
                'permissions': [('can_insert_blindReview', '新增盲审结果'), ('can_delete_blindReview', '删除盲审结果'), ('can_update_blindReview', '修改盲审结果'), ('can_search_blindReview', '查询盲审结果')],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='MidThesisReport',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识ID', primary_key=True, serialize=False, unique=True)),
                ('time', models.DateField(default='2019', help_text='年份')),
                ('stu_count', models.IntegerField(default=0, help_text='学生数量')),
                ('schedule_count', models.IntegerField(default=0, help_text='按期考核人数')),
                ('delay_count', models.IntegerField(default=0, help_text='延期考核人数')),
                ('delay_reason', models.TextField(default='', help_text='延期考核原因')),
                ('delay_proportion', models.IntegerField(default=0, help_text='延期考核比例')),
                ('track_count', models.IntegerField(default=0, help_text='被跟踪人数')),
                ('track_proportion', models.IntegerField(default=0, help_text='被跟踪比例')),
                ('fail_count', models.IntegerField(default=0, help_text='不合格人数')),
                ('fail_proportion', models.IntegerField(default=0, help_text='不合格比例')),
                ('academy', models.ForeignKey(help_text='学院名称', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mtr_academy', to='学院管理.Academy')),
            ],
            options={
                'verbose_name': '中期考核统计',
                'verbose_name_plural': '中期考核统计',
                'db_table': 'midThesisReport',
                'permissions': [('can_insert_midThesisReport', '新增中期考核统计'), ('can_delete_midThesisReport', '删除中期考核统计'), ('can_update_midThesisReport', '修改中期考核统计'), ('can_search_midThesisReport', '查询中期考核统计')],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='OpenThesisReport',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识ID', primary_key=True, serialize=False, unique=True)),
                ('time', models.DateField(default='2019', help_text='年份')),
                ('stu_count', models.IntegerField(default=0, help_text='学生数量')),
                ('schedule_count', models.IntegerField(default=0, help_text='按期开题人数')),
                ('delay_count', models.IntegerField(default=0, help_text='延期开题人数')),
                ('fail_count', models.IntegerField(default=0, help_text='开题不通过人数')),
                ('academy', models.ForeignKey(help_text='学院名称', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='otr_academy', to='学院管理.Academy')),
            ],
            options={
                'verbose_name': '开题报告统计',
                'verbose_name_plural': '开题报告统计',
                'db_table': 'openThesisReport',
                'permissions': [('can_insert_openThesisReport', '新增开题统计'), ('can_delete_openThesisReport', '删除开题统计'), ('can_update_openThesisReport', '修改开题统计'), ('can_search_openThesisReport', '查询开题统计')],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='PlaCheck',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识ID', primary_key=True, serialize=False, unique=True)),
                ('pla_result', models.CharField(help_text='查重结果', max_length=128)),
                ('pla_rate', models.CharField(help_text='重复率', max_length=128)),
            ],
            options={
                'verbose_name': '论文查重',
                'verbose_name_plural': '论文查重',
                'db_table': 'plaCheck',
                'permissions': [('can_insert_plaCheck', '新增查重结果'), ('can_delete_plaCheck', '删除查重结果'), ('can_update_plaCheck', '修改查重结果'), ('can_search_plaCheck', '查询查重结果')],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ThesisQuality',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识ID', primary_key=True, serialize=False, unique=True)),
                ('time', models.DateField(default='2019', help_text='年份')),
                ('full_time_count', models.IntegerField(default=0, help_text='全日制学生数量')),
                ('delay_count', models.IntegerField(default=0, help_text='延期人数')),
                ('delay_reason', models.TextField(default='', help_text='延期原因')),
                ('paper_stu_count', models.IntegerField(default=0, help_text='论文检测人数')),
                ('paper_pass_count', models.IntegerField(default=0, help_text='论文检测结果一次通过人数')),
                ('paper_pass_proportion', models.IntegerField(default=0, help_text='论文检测结果一次通过率')),
                ('paper_fail_count', models.IntegerField(default=0, help_text='论文检测结果不合格人数')),
                ('paper_fail_proportion', models.IntegerField(default=0, help_text='论文检测结果不合格占比')),
                ('paper_fifteen_count', models.IntegerField(default=0, help_text='论文检测结果15%以下人数')),
                ('paper_fifteen_proportion', models.IntegerField(default=0, help_text='论文检测结果15%以下占比')),
                ('paper_ten_count', models.IntegerField(default=0, help_text='论文检测结果10%以下人数')),
                ('paper_ten_proportion', models.IntegerField(default=0, help_text='论文检测结果10%以下占比')),
                ('blind_trial_proportion', models.IntegerField(default=0, help_text='盲审比例')),
                ('blind_trial_count', models.IntegerField(default=0, help_text='盲审未通过人数')),
                ('reply_count', models.IntegerField(default=0, help_text='答辩未通过人数')),
                ('evaluation_count', models.IntegerField(default=0, help_text='评优名额')),
                ('evaluation_result', models.IntegerField(default=0, help_text='评优评选结果')),
                ('graduate_count', models.IntegerField(default=0, help_text='毕业人数')),
                ('graduate_proportion', models.IntegerField(default=0, help_text='毕业率')),
                ('degree_count', models.IntegerField(default=0, help_text='获学位人数')),
                ('degree_proportion', models.IntegerField(default=0, help_text='获学位率')),
                ('academy', models.ForeignKey(help_text='学院名称', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tq_academy', to='学院管理.Academy')),
                ('major', models.ForeignKey(help_text='学科专业', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='major', to='学院管理.Major')),
            ],
            options={
                'verbose_name': '论文质量统计',
                'verbose_name_plural': '论文质量统计',
                'db_table': 'thesisQuality',
                'permissions': [('can_insert_thesisQuality', '新增论文质量统计'), ('can_delete_thesisQuality', '删除论文质量统计'), ('can_update_thesisQuality', '修改论文质量统计'), ('can_search_thesisQuality', '查询论文质量统计')],
                'default_permissions': (),
            },
        ),
        migrations.RemoveField(
            model_name='thesis',
            name='the_blind_score1',
        ),
        migrations.RemoveField(
            model_name='thesis',
            name='the_blind_score2',
        ),
        migrations.RemoveField(
            model_name='thesis',
            name='the_check_result',
        ),
        migrations.AlterField(
            model_name='thesis',
            name='student',
            field=models.ForeignKey(help_text='课题学生', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student', to='用户管理.Student'),
        ),
        migrations.AddField(
            model_name='placheck',
            name='thesis',
            field=models.ForeignKey(help_text='论文课题', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pla_thesis', to='培养管理.Thesis'),
        ),
        migrations.AddField(
            model_name='blindreview',
            name='thesis',
            field=models.ForeignKey(help_text='论文课题', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bli_thesis', to='培养管理.Thesis'),
        ),
    ]
